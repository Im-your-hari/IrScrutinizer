/*
 * Copyright (C) 2018 Bengt Martensson
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.harctoolbox.guicomponents;

import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Rectangle;
import org.harctoolbox.irscrutinizer.Props;

public class ProxyConfigDialog extends javax.swing.JDialog {

    private Props properties;

    private ProxyConfigDialog(Frame parent, Props properties) {
        this(parent, properties.getProxyHostName(), properties.getProxyPort());
        this.properties = properties;
    }

    private ProxyConfigDialog(Frame parent, String hostname, int port) {
        super(parent, "Enter proxy configuration", Dialog.ModalityType.DOCUMENT_MODAL);
        initComponents();
        hostnameTextField.setText(hostname);
        portTextField.setText(Integer.toString(port));
        boolean isProxy = hostname != null && !hostname.isEmpty();
        proxyCheckBox.setSelected(isProxy);
        enableStuff(isProxy);
    }

    public static void inquireProxyConfig(Frame parent, Props properties) {
        ProxyConfigDialog dialog = new ProxyConfigDialog(parent, properties);
        Rectangle parentCoords = parent.getBounds();
        Dimension dim = dialog.getPreferredSize();
        Rectangle myCoords = new Rectangle(dim);
        myCoords.x = parentCoords.x + (parentCoords.width - dim.width)/2;
        myCoords.y = parentCoords.y + (parentCoords.height - dim.height)/2;
        dialog.setBounds(myCoords);
        dialog.setVisible(true); // blocks due to modality
    }

    private void enableStuff() {
        enableStuff(proxyCheckBox.isSelected());
    }

    private void enableStuff(boolean status) {
        hostnameLabel.setEnabled(status);
        hostnameTextField.setEnabled(status);
        portLabel.setEnabled(status);
        portTextField.setEnabled(status);
    }

    private void evaluateStuff() {
        // TODO: handle NumberFormatException gracefully
        int port = Integer.parseInt(portTextField.getText()); // throws NumberFormatException
        String hostname = proxyCheckBox.isSelected() ? hostnameTextField.getText().trim() : "";
        if (properties != null) {
            properties.setProxyPort(port);
            properties.setProxyHostName(hostname);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        proxyCheckBox = new javax.swing.JCheckBox();
        hostnameTextField = new javax.swing.JTextField();
        portTextField = new javax.swing.JTextField();
        hostnameLabel = new javax.swing.JLabel();
        portLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        okButton.setMnemonic('O');
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 22, 48, 0);
        add(okButton, gridBagConstraints);

        cancelButton.setMnemonic('C');
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 159, 48, 0);
        add(cancelButton, gridBagConstraints);

        jLabel1.setText("Proxy Configuration");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 22, 0, 0);
        add(jLabel1, gridBagConstraints);

        proxyCheckBox.setText("Use Proxy for HTTP");
        proxyCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxyCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 28, 0, 0);
        add(proxyCheckBox, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 323;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 0, 12);
        add(hostnameTextField, gridBagConstraints);

        portTextField.setText("8080");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 67;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 12, 0, 0);
        add(portTextField, gridBagConstraints);

        hostnameLabel.setText("Proxy Name/IP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 12, 0, 0);
        add(hostnameLabel, gridBagConstraints);

        portLabel.setText("Proxy Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 12, 0, 0);
        add(portLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void proxyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxyCheckBoxActionPerformed
        enableStuff();
    }//GEN-LAST:event_proxyCheckBoxActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        evaluateStuff();
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel hostnameLabel;
    private javax.swing.JTextField hostnameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel portLabel;
    private javax.swing.JTextField portTextField;
    private javax.swing.JCheckBox proxyCheckBox;
    // End of variables declaration//GEN-END:variables
}
